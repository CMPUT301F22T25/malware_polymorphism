package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentRecipeListBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemEditViewClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;

import java.util.List;
import java.util.Objects;

public class RecipeListFragment extends Fragment implements RecyclerViewOnItemEditViewClickHandler {

    private RecipeViewModel model;
    private LiveData<List<Recipe>> recipeLiveData;
    private FragmentRecipeListBinding binding;

    @SuppressLint("NotifyDataSetChanged")
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        binding = FragmentRecipeListBinding.inflate(inflater, container, false);

        model = new ViewModelProvider(requireActivity()).get(RecipeViewModel.class);
        recipeLiveData = model.getLiveRecipeList();

        RecipeListRecyclerViewAdapter adapter = new RecipeListRecyclerViewAdapter(recipeLiveData.getValue(), this);

        recipeLiveData.observe(getViewLifecycleOwner(), recipes -> {
            adapter.setRecipes(recipes);
            adapter.notifyDataSetChanged();
        });

        Log.w("RECIPE_LIST", "Ran Activity");

        binding.recipeListRecyclerView.setAdapter(adapter);
        binding.recipeListRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(),
                LinearLayoutManager.VERTICAL, false));

        binding.addRecipeFab.setOnClickListener(view -> {
            Intent intent = new Intent(requireActivity(), EditRecipeActivity.class);
            startActivity(intent);
        });

        return binding.getRoot();
    }

    @Override
    public void editClicked(int position) {
        String recipeId = Objects.requireNonNull(recipeLiveData.getValue())
                .get(position).getId();
        Intent intent = new Intent(requireActivity(), EditRecipeActivity.class);
        intent.putExtra("isEditing", true);
        intent.putExtra("recipeId", recipeId);
        startActivity(intent);
    }

    @Override
    public void viewClicked(int position) {
        String recipeId = Objects.requireNonNull(recipeLiveData.getValue())
                .get(position).getId();
        Intent intent = new Intent(requireActivity(), ViewRecipeActivity.class);
        intent.putExtra("recipeId", recipeId);
        startActivity(intent);
        Log.w("RecyclerViewClickHandler", "Clicked View on " + String.valueOf(position));
    }
}
