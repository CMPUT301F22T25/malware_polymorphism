package com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.UI;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.os.Bundle;

import com.CMPUT301F22T25.malwarepolymorphism.databinding.ActivityIngredientDetailsBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.data.IngredientAttributeBundle;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.entities.Ingredient;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.usecases.AddIngredientUseCase;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.usecases.GetIngredientUseCase;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.usecases.ModifyIngredientUseCase;

import java.time.Instant;
import java.util.Objects;

import javax.inject.Inject;

import dagger.hilt.android.AndroidEntryPoint;


@AndroidEntryPoint
public class IngredientDetailsActivity extends AppCompatActivity {


    @Inject
    ModifyIngredientUseCase modifyIngredientUseCase;

    @Inject
    GetIngredientUseCase getIngredientUseCase;

    @Inject
    AddIngredientUseCase addIngredientUseCase;

    ActivityIngredientDetailsBinding binding;


    @SuppressLint("SetTextI18n")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        binding = ActivityIngredientDetailsBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());

        // TODO: Set up the validation on the UI text boxes.




        boolean isEditing = getIntent().getBooleanExtra("IsEditing", false);

        if (isEditing) {
            String ingredientId = getIntent().getStringExtra("ingredientId");
            prePopulateFields(ingredientId);
        }

        binding.cancelButton.setOnClickListener(view -> {
            finish();
        });

        binding.saveButton.setOnClickListener(view -> {

            if (/* validate data here*/ false) {
                return;
            }

            IngredientAttributeBundle bundle = new IngredientAttributeBundle(
                    /* TODO: Get actual data from the fields*/
                    "TITLE",
                    Objects.requireNonNull(binding.descriptionTextField.getEditText()).getText().toString(),
                    Long.parseLong(Objects.requireNonNull(binding.amountTextField.getEditText()).getText().toString()),
                    Objects.requireNonNull(binding.unitTextField.getEditText()).getText().toString(),
                    "Location",
                    Instant.now(),
                    Objects.requireNonNull(binding.categoryTextField.getEditText()).getText().toString()
            );

            if (isEditing) {
                String ingredientId = getIntent().getStringExtra("ingredientId");
                modifyIngredientUseCase.execute(ingredientId, bundle);
            } else {
                addIngredientUseCase.execute(bundle);
            }
            finish();
        });
    }

    void prePopulateFields(String ingredientId) {
        Ingredient ingredient = getIngredientUseCase.execute(ingredientId);
        // TODO: Pre populate the fields.
    }
}