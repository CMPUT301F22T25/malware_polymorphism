package com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.data;

import android.util.Log;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;

import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.data.IngredientAttributeBundle;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.data.IngredientRepository;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.entities.Ingredient;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.inject.Inject;

public class MockIngredientRepository implements IngredientRepository {
    MutableLiveData<List<Ingredient>> liveIngredients;
    int currentId;

    @Inject
    public MockIngredientRepository() {
        liveIngredients = new MutableLiveData<>();
        liveIngredients.setValue(new ArrayList<>());
    }

    @Override
    public LiveData<List<Ingredient>> getIngredientsList() {
        return liveIngredients;
    }

    @Override
    public void addIngredient(IngredientAttributeBundle ingredientBundle) {
        Log.d("IVM", "Added ingredient.");
        List<Ingredient> currentList = liveIngredients.getValue();
        assert currentList != null;
        currentList.add(new Ingredient("id",
                ingredientBundle.getTitle(),
                ingredientBundle.getDescription(),
                ingredientBundle.getAmount(),
                ingredientBundle.getUnit(),
                ingredientBundle.getLocation(),
                ingredientBundle.getBestBefore(),
                ingredientBundle.getCatagory()));
        Log.d("IVM", "Called setValue");
        liveIngredients.setValue(currentList);;
    }

    @Override
    public void modifyIngredient(Ingredient old, IngredientAttributeBundle modified) {

    }

    @Override
    public void deleteIngredient(Ingredient ingredient) {
        Log.d("MOCKS", "CALLED DELETE");
    }
}
