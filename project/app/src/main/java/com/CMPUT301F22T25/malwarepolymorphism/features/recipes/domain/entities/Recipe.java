package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities;

import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.entities.Ingredient;

import java.time.Instant;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

public class Recipe {
    private final String id;
    private String title;
    private long preparationTimeInMinutes;
    private long numberOfServings;
    private String category;
    private String comments;
    private String imageUrl;
    private List<RecipeIngredientMember> ingredients;

    /**
     * initializing Recipe
     * @param id
     * @param title
     * @param preparationTimeInMinutes
     * @param numberOfServings
     * @param category
     * @param comments
     * @param imageUrl
     * @param ingredients
     */
    public Recipe(String id, String title, long preparationTimeInMinutes, long numberOfServings,
                  String category, String comments, String imageUrl, List<RecipeIngredientMember>
                          ingredients) {
        this.id = id;
        this.title = title;
        this.preparationTimeInMinutes = preparationTimeInMinutes;
        this.numberOfServings = numberOfServings;
        this.category = category;
        this.comments = comments;
        this.imageUrl = imageUrl;
        this.ingredients = ingredients;
    }


    /**
     *
     * @return the id of the recipe
     */
    public String getId() {
        return id;
    }

    /**
     *
     * @return title of the recipe
     */
    public String getTitle() {
        return title;
    }

    /**
     * sets the title of the recipe
     * @param title title to be set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     *
     * @return preparation time
     */
    public long getPreparationTimeInMinutes() {
        return preparationTimeInMinutes;
    }

    /**
     * sets the preparation time
     * @param preparationTimeInMinutes preparation time to be set
     */
    public void setPreparationTimeInMinutes(long preparationTimeInMinutes) {
        this.preparationTimeInMinutes = preparationTimeInMinutes;
    }

    /**
     *
     * @return number of servings
     */
    public long getNumberOfServings() {
        return numberOfServings;
    }

    /**
     * sets the number of servings
     * @param numberOfServings number of servings to be set
     */
    public void setNumberOfServings(long numberOfServings) {
        this.numberOfServings = numberOfServings;
    }

    /**
     *
     * @return category of the recipe
     */
    public String getCategory() {
        return category;
    }

    /**
     * sets the category of the recipe
     * @param category category to be set
     */
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     *
     * @return comments of the recipe
     */
    public String getComments() {
        return comments;
    }

    /**
     * sets the comments of the recipe
     * @param comments comments to be set
     */
    public void setComments(String comments) {
        this.comments = comments;
    }

    /**
     *
     * @return image url of the recipe
     */
    public String getImageUrl() {
        return imageUrl;
    }

    /**
     * sets the image url of the recipe
     * @param imageUrl image url to be set
     */
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    /**
     *
     * @return ingredients of the recipe
     */
    public List<RecipeIngredientMember> getIngredients() {
        return ingredients;
    }

    /**
     * sets the ingredients of the recipe
     * @param ingredients ingredients to be set
     */
    public void setIngredients(List<RecipeIngredientMember> ingredients) {
        this.ingredients = ingredients;
    }

    public HashMap<String, Object> toHashMap() {
        HashMap<String, Object> map = new HashMap<>();
        map.put("id", id);
        map.put("title", title);
        map.put("preparationTime",preparationTimeInMinutes);
        map.put("numOfServings", numberOfServings);
        map.put("category", category);
        map.put("comments", comments);
        map.put("imageUrl", imageUrl);

        List<HashMap<String, Object>> ingredientList = new ArrayList<>();
                ingredients.forEach(member -> ingredientList.add(member.toHashMap()));
        map.put("ingredients", ingredientList);
        return map;
    }

    static Recipe fromHashMap(HashMap<String, Object> map) {
        List<RecipeIngredientMember> ingredientMembers = new ArrayList<>();
        List<HashMap<String, Object>> ingredients =
                (List<HashMap<String, Object>>) map.get("ingredients");

        assert ingredients != null;
        ingredients.forEach(
                ingredientMap -> ingredientMembers.add(
                        RecipeIngredientMember.fromHashMap(ingredientMap)));

        return new Recipe(
                (String) map.get("id"),
                (String) map.get("title"),
                (long) map.get("preparationTimeInMinutes"),
                (long) map.get("numOfServings"),
                (String) map.get("category"),
                (String) map.get("comments"),
                (String) map.get("imageUrl"),
                ingredientMembers
        );
    }
}
