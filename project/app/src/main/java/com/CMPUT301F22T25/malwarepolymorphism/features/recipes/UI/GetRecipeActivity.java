package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;

import androidx.activity.result.contract.ActivityResultContract;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.lifecycle.LiveData;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.CMPUT301F22T25.malwarepolymorphism.databinding.ActivityGetRecipeActivityBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.common.RecyclerViewOnItemClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.mealplans.domain.entities.MealPlanRecipeMember;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.data.RecipeRepository;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;

import java.util.List;
import java.util.Objects;

import javax.inject.Inject;

import dagger.hilt.android.AndroidEntryPoint;

@AndroidEntryPoint
public class GetRecipeActivity extends AppCompatActivity implements RecyclerViewOnItemClickHandler {

    @Inject
    RecipeRepository repository;

    LiveData<List<Recipe>> liveRecipes;

    ActivityGetRecipeActivityBinding binding;

    public static class ResultContract extends ActivityResultContract<Integer, MealPlanRecipeMember> {

        @NonNull
        @Override
        public Intent createIntent(@NonNull Context context, Integer unused) {
            return new Intent(context, GetRecipeActivity.class);
        }

        @Override
        public MealPlanRecipeMember parseResult(int resultCode, @Nullable Intent intent) {
            if (resultCode != RESULT_OK) {
                return null;
            }
            assert intent != null;
            return (MealPlanRecipeMember) intent.getExtras().get("recipe");
        }
    }

    @SuppressLint("NotifyDataSetChanged")
    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        binding = ActivityGetRecipeActivityBinding.inflate(getLayoutInflater());

        liveRecipes = repository.getRecipeList();
        GetRecipeRecyclerViewAdapter adapter = new GetRecipeRecyclerViewAdapter(liveRecipes.getValue(), this);

        liveRecipes.observe(this, recipes -> {
            adapter.setRecipes(recipes);
            adapter.notifyDataSetChanged();
        });

        binding.recipeListRecyclerView.setAdapter(adapter);
        binding.recipeListRecyclerView.setLayoutManager(new LinearLayoutManager(this,
                LinearLayoutManager.VERTICAL, false));

        binding.recipeSortIconButton.setOnClickListener(v -> {
            new RecipeSortBottomModalSheet().show(getSupportFragmentManager(), "SORT");
        });

        binding.addRecipeFab.setVisibility(View.INVISIBLE);
        setContentView(binding.getRoot());
    }

    @Override
    public void onRecyclerViewItemClicked(int position) {
        Recipe selectedRecipe = Objects.requireNonNull(liveRecipes.getValue()).get(position);
        MealPlanRecipeMember result = MealPlanRecipeMember.fromRecipe(selectedRecipe);
        Intent intent = new Intent();
        intent.putExtra("recipe", result);
        setResult(RESULT_OK, intent);
        finish();
    }
}