package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI;

import android.annotation.SuppressLint;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentSelectRecipeCardBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;
import com.bumptech.glide.Glide;

import java.util.List;

public class GetRecipeRecyclerViewAdapter extends RecyclerView.Adapter<GetRecipeRecyclerViewAdapter.ViewHolder> {
    private List<Recipe> recipes;
    private final RecyclerViewOnItemClickHandler clickHandler;

    public void setRecipes(List<Recipe> recipes) {
        this.recipes = recipes;
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        private final FragmentSelectRecipeCardBinding binding;
        private final View underlyingView;

        public ViewHolder(View view, RecyclerViewOnItemClickHandler clickHandler) {
            super(view);
            binding = FragmentSelectRecipeCardBinding.bind(view);
            underlyingView = view;

            view.setOnClickListener(v -> {
                Log.d("RecyclerView", "Called on click");
                int position = getAdapterPosition();

                if (position == RecyclerView.NO_POSITION) {
                    Log.d("RecyclerView", "Invalid Position");
                }

                if (clickHandler == null) {
                    Log.d("RecyclerView", "No click handler.");
                }
                if (position != RecyclerView.NO_POSITION && clickHandler != null) {
                    Log.d("RecyclerView", "Called on click on main");
                    clickHandler.onRecyclerViewItemClicked(position);
                }
            });
        }

        public View getUnderlyingView() {
            return underlyingView;
        }
    }

    public GetRecipeRecyclerViewAdapter(List<Recipe> recipes, RecyclerViewOnItemClickHandler clickHandler) {
        this.recipes = recipes;
        this.clickHandler = clickHandler;
    }

    @NonNull
    @Override
    public GetRecipeRecyclerViewAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fragment_select_recipe_card, parent, false);
        return new GetRecipeRecyclerViewAdapter.ViewHolder(view, clickHandler);
    }


    @SuppressLint("SetTextI18n")
    @Override
    public void onBindViewHolder(@NonNull GetRecipeRecyclerViewAdapter.ViewHolder holder, int position) {
        Recipe recipe = recipes.get(position);
        String prepTimeString = recipe.getPreparationTimeInMinutes() + " minutes";
        holder.binding.titleTextField.setText(recipe.getTitle());
        holder.binding.prepTimeTextField.setText(prepTimeString);

        Glide.with(holder.getUnderlyingView())
                .load(recipe.getImageUrl())
                .centerCrop()
                .into(holder.binding.recipeImage);
    }

    @Override
    public int getItemCount() {
        return recipes.size();
    }
}
