package com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.UI;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.LiveData;
import androidx.lifecycle.ViewModelProvider;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentIngredientListBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.common.RecyclerViewOnItemClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.entities.Ingredient;

import java.util.List;
import java.util.Objects;

import dagger.hilt.android.AndroidEntryPoint;

@AndroidEntryPoint
public class IngredientListFragment extends Fragment implements RecyclerViewOnItemClickHandler {

    private FragmentIngredientListBinding binding;
    private LiveData<List<Ingredient>> ingredients;
    private IngredientViewModel model;

    @SuppressLint("NotifyDataSetChanged")
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
                             @Nullable Bundle savedInstanceState) {
        binding = FragmentIngredientListBinding.inflate(inflater, container, false);
        model = new ViewModelProvider(requireActivity()).get(IngredientViewModel.class);

        // Set up the FAB to add a new ingredient.
        binding.addIngredientFab.setOnClickListener(view -> {
            Intent intent = new Intent(requireActivity(), IngredientDetailsActivity.class);
            startActivity(intent);
        });

        //
        ingredients = model.getIngredientsLiveData();
        IngredientListRecyclerViewAdapter adapter = new IngredientListRecyclerViewAdapter(ingredients.getValue(), this);

        ingredients.observe(getViewLifecycleOwner(), ingredientsList -> {
            adapter.setIngredients(ingredientsList);
            adapter.notifyDataSetChanged();
        });
        binding.ingredientListRecyclerView.setAdapter(adapter);
        binding.ingredientListRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(),
                LinearLayoutManager.VERTICAL, false));

        binding.ingredientSortIconButton.setOnClickListener(view -> {
            new IngredientSortBottomModalSheet().show(requireActivity().getSupportFragmentManager(), "SORT");
        });

        return binding.getRoot();
    }

    /**
     * Starts the IngredientDetailsActivity to edit an ingredient that was already in the list.
     *
     * @param position The position of the item in the RecyclerView that was clicked.
     */
    @Override
    public void onRecyclerViewItemClicked(int position) {
        Ingredient clicked = Objects.requireNonNull(ingredients.getValue()).get(position);
        assert clicked != null;
        Intent intent =new Intent(requireActivity(), IngredientDetailsActivity.class);
        intent.putExtra("isEditing", true);
        intent.putExtra("ingredientId", clicked.getId());
        startActivity(intent);
    }

    private void sortCalled() {
        model.sortIngredientListByDescription();
    }
}
