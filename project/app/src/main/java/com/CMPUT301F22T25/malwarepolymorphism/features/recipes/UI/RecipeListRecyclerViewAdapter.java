package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentRecipeCardBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemEditViewClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;
import com.bumptech.glide.Glide;

import java.util.List;

public class RecipeListRecyclerViewAdapter extends RecyclerView.Adapter<RecipeListRecyclerViewAdapter.ViewHolder> {
    private List<Recipe> recipes;
    private final RecyclerViewOnItemEditViewClickHandler clickHandler;

    public RecipeListRecyclerViewAdapter(List<Recipe> recipes, RecyclerViewOnItemEditViewClickHandler clickHandler) {
        this.clickHandler = clickHandler;
        this.recipes = recipes;
    }

    public void setRecipes(List<Recipe> recipes) {
        this.recipes = recipes;
    }


    public static class ViewHolder extends RecyclerView.ViewHolder {
        private final ImageView imageView;
        private final TextView titleTextView;
        private final TextView preparationTimeTextView;
        private final TextView commentTextView;
        private final Button viewRecipeDetailsButton;
        private final Button editRecipeButton;
        private final View underlyingView;
        private final RecyclerViewOnItemEditViewClickHandler clickHandler;


        public View getUnderlyingView() {
            return underlyingView;
        }



        public ViewHolder(View view, RecyclerViewOnItemEditViewClickHandler clickHandler) {
            super(view);
            this.clickHandler = clickHandler;
            underlyingView = view;
            FragmentRecipeCardBinding binding = FragmentRecipeCardBinding.bind(view);
            imageView = binding.recipeImageView;
            titleTextView = binding.titleTextField;
            preparationTimeTextView = binding.prepTimeTextField;
            commentTextView = binding.commentsTextField;
            viewRecipeDetailsButton = binding.viewRecipeButton;
            editRecipeButton = binding.editRecipeButton;

            view.getContext();
        }

        public TextView getCommentTextView() {
            return commentTextView;
        }

        public TextView getPreparationTimeTextView() {
            return preparationTimeTextView;
        }

        public TextView getTitleTextView() {
            return titleTextView;
        }

        public Button getViewRecipeDetailsButton() {
            return viewRecipeDetailsButton;
        }

        public Button getEditRecipeButton() {
            return editRecipeButton;
        }

        public ImageView getImageView() {
            return imageView;
        }
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {

        View view = LayoutInflater.from(parent.getContext()).inflate(
                R.layout.fragment_recipe_card, parent, false);
        return new ViewHolder(view, clickHandler);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Recipe recipe = recipes.get(position);

        // Setup the image view.
        Glide.with(holder.getUnderlyingView())
                .load("https://www.acouplecooks.com/wp-content/uploads/2019/05/Chopped-Salad-001_1.jpg")
                .fitCenter()
                .into(holder.getImageView());

        // Setup the textview with the appropriate data.
        holder.getTitleTextView().setText(recipe.getTitle());
        holder.getPreparationTimeTextView()
                .setText(String.valueOf(recipe.getPreparationTimeInMinutes()));
        holder.getCommentTextView().setText(recipe.getComments());
        holder.getEditRecipeButton().setOnClickListener(view -> {
            clickHandler.editClicked(position);
        });
        holder.getViewRecipeDetailsButton().setOnClickListener(view -> {
            clickHandler.viewClicked(position);
        });
    }

    @Override
    public int getItemCount() {
        return recipes.size();
    }
}
