package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentRecipeCardBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemEditViewClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;
import com.bumptech.glide.Glide;

import java.util.List;

public class RecipeListRecyclerViewAdapter extends RecyclerView.Adapter<RecipeListRecyclerViewAdapter.ViewHolder> {
    private List<Recipe> recipes;
    private final RecyclerViewOnItemEditViewClickHandler clickHandler;

    public RecipeListRecyclerViewAdapter(List<Recipe> recipes, RecyclerViewOnItemEditViewClickHandler clickHandler) {
        this.clickHandler = clickHandler;
        this.recipes = recipes;
    }

    public void setRecipes(List<Recipe> recipes) {
        this.recipes = recipes;
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        private final View underlyingView;

        private final FragmentRecipeCardBinding binding;

        public View getUnderlyingView() {
            return underlyingView;
        }

        public ViewHolder(View view) {
            super(view);
            underlyingView = view;
            binding = FragmentRecipeCardBinding.bind(view);
        }
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(
                R.layout.fragment_recipe_card, parent, false);
        return new ViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Recipe recipe = recipes.get(position);

        // Setup the image view.
        Glide.with(holder.getUnderlyingView())
                .load(recipe.getImageUrl())
                .centerCrop()
                .into(holder.binding.recipeImageView);

        // Setup the textview with the appropriate data.
        holder.binding.titleTextField.setText(recipe.getTitle());

        String prepTimeString = recipe.getPreparationTimeInMinutes() + " minutes";
        holder.binding.prepTimeTextField
                .setText(prepTimeString);

        String commentString = (recipe.getComments().length() < 300) ?
                recipe.getComments() : recipe.getComments().substring(0, 297) + "...";

        holder.binding.commentsTextField.setText(commentString);
        holder.binding.editRecipeButton.setOnClickListener(view -> {
            clickHandler.editClicked(position);
        });
        holder.binding.viewRecipeButton.setOnClickListener(view -> {
            clickHandler.viewClicked(position);
        });
    }

    @Override
    public int getItemCount() {
        return recipes.size();
    }
}
