package com.CMPUT301F22T25.malwarepolymorphism.features.mealplans.UI;

import androidx.lifecycle.LiveData;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;

import com.CMPUT301F22T25.malwarepolymorphism.features.mealplans.domain.entities.MealPlanRecipeMember;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.RecipeIngredientMember;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

public class AddMealPlanViewModel extends ViewModel {
    private final MutableLiveData<List<RecipeIngredientMember>> currentlySelectedIngredients;
    private final MutableLiveData<List<MealPlanRecipeMember>> currentlySelectedRecipes;
    private RecipeIngredientMember selectedMember;

    @Inject
    AddMealPlanViewModel() {
        currentlySelectedIngredients = new MutableLiveData<>(new ArrayList<>());
        currentlySelectedRecipes = new MutableLiveData<>(new ArrayList<>());
    }

    public LiveData<List<RecipeIngredientMember>> getCurrentlySelectedIngredients() {
        return currentlySelectedIngredients;
    }

    public LiveData<List<MealPlanRecipeMember>> getCurrentlySelectedRecipes() {
        return currentlySelectedRecipes;
    }

    public void setCurrentlySelectedIngredients(List<RecipeIngredientMember> ingredients) {
        this.currentlySelectedIngredients.postValue(ingredients);
    }

    public void setCurrentlySelectedRecipes(List<MealPlanRecipeMember> recipes) {
        this.currentlySelectedRecipes.postValue(recipes);
    }

    public void addIngredientToSelected(RecipeIngredientMember selected) {
        List<RecipeIngredientMember> currentList = currentlySelectedIngredients.getValue();
        assert currentList != null;
        currentList.add(selected);
        currentlySelectedIngredients.postValue(currentList);
    }

    public void removeIngredientFromSelected(RecipeIngredientMember selected) {
        List<RecipeIngredientMember> currentList = currentlySelectedIngredients.getValue();
        assert currentList != null;
        currentList.remove(selected);
        currentlySelectedIngredients.postValue(currentList);
    }

    public void addRecipeToSelected(MealPlanRecipeMember recipe) {
        List<MealPlanRecipeMember> currentList = currentlySelectedRecipes.getValue();
        assert currentList != null;
        currentList.add(recipe);
        currentlySelectedRecipes.postValue(currentList);
    }

    public void removeRecipeFromSelected(MealPlanRecipeMember recipe) {
        List<MealPlanRecipeMember> currentList = currentlySelectedRecipes.getValue();
        assert currentList != null;
        currentList.remove(recipe);
        currentlySelectedRecipes.postValue(currentList);
    }


    public void forceReload() {
        currentlySelectedIngredients.postValue(currentlySelectedIngredients.getValue());
    }
}
