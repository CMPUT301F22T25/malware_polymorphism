package com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.data;

import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.RecipeIngredientMember;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * RecipeAttributeBundle represents all the information that is needed to add a recipe to the
 */
public class RecipeAttributeBundle {
    private String title;
    private long preparationTime;
    private long numberOfServings;
    private String comment;
    private String category;
    private String imageUrl;
    private List<RecipeIngredientMember> ingredients;

    /**
     * initializing RecipeAttributeBundle
     * @param title
     * @param preparationTime
     * @param numberOfServings
     * @param category
     * @param comment
     * @param imageUrl
     * @param ingredients
     */
    public RecipeAttributeBundle(String title, long preparationTime, long numberOfServings, String category,
                                 String comment, String imageUrl, List<RecipeIngredientMember> ingredients) {
        this.title = title;
        this.preparationTime = preparationTime;
        this.numberOfServings = numberOfServings;
        this.comment = comment;
        this.category = category;
        this.imageUrl = imageUrl;
        this.ingredients = ingredients;
    }

    /**
     *
     * @return title of the recipe
     */
    public String getTitle() {

        return title;
    }

    /**
     * sets the title of the recipe
     * @param title title to be set
     */
    public void setTitle(String title) {

        this.title = title;
    }

    /**
     *
     * @return preparation time
     */
    public long getPreparationTime() {

        return preparationTime;
    }

    /**
     * sets the preparation time
     * @param preparationTime preparation time to be set
     */
    public void setPreparationTime(long preparationTime) {

        this.preparationTime = preparationTime;
    }

    /**
     *
     * @return number of servings
     */
    public long getNumberOfServings() {

        return numberOfServings;
    }

    /**
     * sets the number of servings
     * @param numberOfServings number of servings to be set
     */
    public void setNumberOfServings(long numberOfServings) {

        this.numberOfServings = numberOfServings;
    }

    /**
     *
     * @return category
     */
    public String getCategory() {

        return category;
    }

    /**
     * sets the category
     * @param category category to be set
     */
    public void setCategory(String category) {

        this.category = category;
    }

    /**
     *
     * @return image url
     */
    public String getImageUrl() {

        return imageUrl;
    }

    /**
     * sets the image url
     * @param imageUrl image url to be set
     */
    public void setImageUrl(String imageUrl) {

        this.imageUrl = imageUrl;
    }

    /**
     *
     * @return ingredients
     */
    public List<RecipeIngredientMember> getIngredients() {

        return ingredients;
    }

    /**
     * sets the ingredients
     * @param ingredients ingredients to be set
     */
    public void setIngredients(List<RecipeIngredientMember> ingredients) {
        this.ingredients = ingredients;
    }

    public String getComment() {

        return comment;
    }

    public void setComment(String comment) {

        this.comment = comment;
    }

    public HashMap<String, Object> toHashMap() {
        HashMap<String, Object> map = new HashMap<>();
        map.put("title", title);
        map.put("preparationTime", preparationTime);
        map.put("numOfServings", numberOfServings);
        map.put("category", category);
        map.put("comments", comment);
        map.put("imageUrl", imageUrl);

        List<HashMap<String, Object>> ingredientList = new ArrayList<>();
        ingredients.forEach(member -> ingredientList.add(member.toHashMap()));
        map.put("ingredients", ingredientList);
        return map;
    }

    static RecipeAttributeBundle fromHashMap(HashMap<String, Object> map) {
        List<RecipeIngredientMember> ingredientMembers = new ArrayList<>();
        List<HashMap<String, Object>> ingredients =
                (List<HashMap<String, Object>>) map.get("ingredients");

        assert ingredients != null;
        ingredients.forEach(
                ingredientMap -> ingredientMembers.add(
                        RecipeIngredientMember.fromHashMap(ingredientMap)));

        return new RecipeAttributeBundle(
                (String) map.get("title"),
                (long) map.get("preparationTime"),
                (long) map.get("numOfServings"),
                (String) map.get("category"),
                (String) map.get("comments"),
                (String) map.get("imageUrl"),
                ingredientMembers
        );
    }
}
