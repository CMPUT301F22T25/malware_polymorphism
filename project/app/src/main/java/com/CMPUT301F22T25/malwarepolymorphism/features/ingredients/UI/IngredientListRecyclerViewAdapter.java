package com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.UI;

import android.annotation.SuppressLint;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentIngredientCardBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.domain.entities.Ingredient;

import java.util.List;

public class IngredientListRecyclerViewAdapter extends RecyclerView.Adapter<IngredientListRecyclerViewAdapter.ViewHolder> {
    private List<Ingredient> ingredients;
    private final RecyclerViewOnItemClickHandler clickHandler;

    /**
     *
     * @param ingredients ingredients present
     */
    public void setIngredients(List<Ingredient> ingredients) {
        this.ingredients = ingredients;
    }

    public static class ViewHolder extends RecyclerView.ViewHolder {
        private final TextView titleTextView;
        private final TextView amountTextView;
        private final TextView locationTextView;

        /**
         *
         * @param view
         * @param clickHandler
         */
        public ViewHolder(View view, RecyclerViewOnItemClickHandler clickHandler) {
            super(view);
            FragmentIngredientCardBinding binding = FragmentIngredientCardBinding.bind(view);
            titleTextView = binding.titleTextField;
            amountTextView = binding.amountTextField;
            locationTextView = binding.locationTextField;


            view.setOnClickListener(v -> {
                Log.d("RecyclerView", "Called on click");
                int position = getAdapterPosition();

                if (position == RecyclerView.NO_POSITION) {
                    Log.d("RecyclerView", "Invalid Position");
                }

                if (clickHandler == null) {
                    Log.d("RecyclerView", "No click handler.");
                }
                if (position != RecyclerView.NO_POSITION && clickHandler != null) {
                    Log.d("RecyclerView", "Called on click on main");
                    clickHandler.onRecyclerViewItemClicked(position);
                }
            });
        }

        /**
         * get value of the location textview
         * @return location Ingredient
         */
        public TextView getLocationTextView() {
            return locationTextView;
        }

        /**
         * get value of the amount textview
         * @return amount Ingredient
         */
        public TextView getAmountTextView() {
            return amountTextView;
        }

        /**
         * get value of the title textview
         * @return title Ingredient
         */
        public TextView getTitleTextView() {
            return titleTextView;
        }
    }

    /**
     *
     * @param ingredients
     * @param clickHandler
     */
    public IngredientListRecyclerViewAdapter(List<Ingredient> ingredients, RecyclerViewOnItemClickHandler clickHandler) {
        this.ingredients = ingredients;
        this.clickHandler = clickHandler;
    }

    @NonNull
    @Override
    /**
     *  viewholder
     */
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fragment_ingredient_card, parent, false);
        return new ViewHolder(view, clickHandler);
    }


    @SuppressLint("SetTextI18n")
    @Override
    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {
        Ingredient ingredient = ingredients.get(position);
        holder.getTitleTextView().setText(ingredient.getDescription());
        holder.getAmountTextView().setText(ingredient.getAmount() + " " + ingredient.getUnit());
        holder.getLocationTextView().setText(ingredient.getLocation());
    }

    @Override
    /**
     * returns number of items present (total ingredients)
     */
    public int getItemCount() {
        return ingredients.size();
    }
}