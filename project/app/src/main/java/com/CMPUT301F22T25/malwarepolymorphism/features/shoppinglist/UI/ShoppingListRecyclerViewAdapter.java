package com.CMPUT301F22T25.malwarepolymorphism.features.shoppinglist.UI;

import android.annotation.SuppressLint;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentShopIngredientCardBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.RecyclerViewOnItemClickHandler;
import com.CMPUT301F22T25.malwarepolymorphism.features.common.SingleArgLambda;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.RecipeIngredientMember;
import com.CMPUT301F22T25.malwarepolymorphism.features.shoppinglist.data.FirebaseShoppingListEntry;

import java.util.List;

public class ShoppingListRecyclerViewAdapter extends RecyclerView.Adapter<ShoppingListRecyclerViewAdapter.ViewHolder> {
    private List<FirebaseShoppingListEntry> shoppingList;
    private final SingleArgLambda<Integer> onChecked;
    private final SingleArgLambda<Integer> onUnchecked;
    private final SingleArgLambda<Integer> clickHandler;

    public static class ViewHolder extends RecyclerView.ViewHolder {

        private final FragmentShopIngredientCardBinding binding;
        private boolean isChecked;


        public ViewHolder(View view, SingleArgLambda<Integer> onChecked, SingleArgLambda<Integer> onUnchecked,
                          SingleArgLambda<Integer> onCardClicked) {
            super(view);
            binding = FragmentShopIngredientCardBinding.bind(view);

            binding.collectedIngredientCheckbox.setOnCheckedChangeListener((buttonView, checked) -> {
                if (isChecked == checked)
                    return;
                isChecked = checked;

                int position = getAdapterPosition();

                if (position == RecyclerView.NO_POSITION)
                    return;

                if (checked)
                    onChecked.call(position);
                else
                    onUnchecked.call(position);
            });

            view.setOnClickListener(v -> {
                if (!isChecked)
                    return;

                Log.d("RecyclerView", "Called on click");
                int position = getAdapterPosition();

                if (position == RecyclerView.NO_POSITION) {
                    Log.d("RecyclerView", "Invalid Position");
                }

                if (onCardClicked == null) {
                    Log.d("RecyclerView", "No click handler.");
                }
                if (position != RecyclerView.NO_POSITION && onCardClicked != null) {
                    Log.d("RecyclerView", "Called on click on main");
                    onCardClicked.call(position);
                }
            });
        }

    }
    public ShoppingListRecyclerViewAdapter(List<FirebaseShoppingListEntry> shoppingList,
                                           SingleArgLambda<Integer> onChecked,
                                           SingleArgLambda<Integer> onUnchecked,
                                           SingleArgLambda<Integer> clickHandler) {
        this.shoppingList = shoppingList;
        this.onChecked = onChecked;
        this.onUnchecked = onUnchecked;
        this.clickHandler = clickHandler;
    }

    public void setShoppingList(List<FirebaseShoppingListEntry> shoppingList) {
        this.shoppingList = shoppingList;
    }

    @NonNull
    @Override
    public ShoppingListRecyclerViewAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(
                parent.getContext()).inflate(R.layout.fragment_shop_ingredient_card, parent, false);
        return new ShoppingListRecyclerViewAdapter.ViewHolder(view, onChecked, onUnchecked, clickHandler);
    }


    @SuppressLint("SetTextI18n")
    @Override
    public void onBindViewHolder(@NonNull ShoppingListRecyclerViewAdapter.ViewHolder holder, int position) {
        RecipeIngredientMember ingredient = shoppingList.get(position).getIngredient();
        holder.binding.titleTextField.setText(ingredient.getDescription());
        String amountString = ingredient.getAmount() + " " + ingredient.getUnit();
        holder.binding.amountTextField.setText(amountString);
        holder.binding.collectedIngredientCheckbox.setOnCheckedChangeListener(
                (buttonView, checked) -> {
                if (holder.isChecked == checked)
                    return;

                holder.isChecked = checked;
        });
        holder.binding.categoryChip.setText(ingredient.getCategory());
    }

    @Override
    public int getItemCount() {
        return shoppingList.size();
    }
}
