package com.CMPUT301F22T25.malwarepolymorphism.features.shoppinglist.UI;

import android.annotation.SuppressLint;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.lifecycle.LiveData;
import androidx.recyclerview.widget.LinearLayoutManager;

import com.CMPUT301F22T25.malwarepolymorphism.R;
import com.CMPUT301F22T25.malwarepolymorphism.databinding.FragmentShoppingListBinding;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.UI.RecipeListRecyclerViewAdapter;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.RecipeIngredientMember;
import com.CMPUT301F22T25.malwarepolymorphism.features.shoppinglist.domain.data.ShoppingListRepository;

import java.util.List;

public class ShoppingListFragment extends Fragment {

    // TODO: INJECT THIS.
    ShoppingListRepository repository;

    LiveData<List<RecipeIngredientMember>> liveShoppingList;
    List<RecipeIngredientMember> shoppingList;

    FragmentShoppingListBinding binding;

    @SuppressLint("NotifyDataSetChanged")
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        binding = FragmentShoppingListBinding.inflate(inflater, container, false);

        liveShoppingList = repository.getShoppingList();
        shoppingList = liveShoppingList.getValue();

        ShoppingListRecyclerViewAdapter adapter = new ShoppingListRecyclerViewAdapter(shoppingList,
                null);

        liveShoppingList.observe(requireActivity(), newShoppingList -> {
            shoppingList = newShoppingList;
            adapter.setShoppingList(shoppingList);
            adapter.notifyDataSetChanged();
        });

        binding.shoppingListRecyclerView.setAdapter(adapter);
        binding.shoppingListRecyclerView.setLayoutManager(new LinearLayoutManager(getContext(),
                LinearLayoutManager.VERTICAL, false));

        return binding.getRoot();
    }
}