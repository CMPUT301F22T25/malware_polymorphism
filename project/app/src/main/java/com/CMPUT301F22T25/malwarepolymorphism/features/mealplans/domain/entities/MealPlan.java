package com.CMPUT301F22T25.malwarepolymorphism.features.mealplans.domain.entities;

import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.Recipe;
import com.CMPUT301F22T25.malwarepolymorphism.features.recipes.domain.entities.RecipeIngredientMember;

import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

public class MealPlan {
    private final String id;
    private String title;
    private long numberOfServings;
    private Instant date;
    private Recipe recipe;
    private List<RecipeIngredientMember> ingredients;
    private List<MealPlanRecipeMember> recipes;


    public MealPlan(String id, String title, long numberOfServings, Instant date, List<RecipeIngredientMember> ingredients, List<MealPlanRecipeMember> recipes) {
        this.id = id;
        this.title = title;
        this.numberOfServings = numberOfServings;
        this.date = date;
        this.ingredients = ingredients;
        this.recipes = recipes;
    }

    public String getId() {
        return id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public long getNumberOfServings() {
        return numberOfServings;
    }

    public void setNumberOfServings(long numberOfServings) {
        this.numberOfServings = numberOfServings;
    }

    public Instant getDate() {
        return date;
    }

    public void setDate(Instant date) {
        this.date = date;
    }

    public Recipe getRecipe() {
        return recipe;
    }

    public void setRecipe(Recipe recipe) {
        this.recipe = recipe;
    }

    public List<RecipeIngredientMember> getIngredients() {
        return ingredients;
    }

    public void setIngredients(List<RecipeIngredientMember> ingredients) {
        this.ingredients = ingredients;
    }

    public List<MealPlanRecipeMember> getRecipes() {
        return recipes;
    }

    public void setRecipes(List<MealPlanRecipeMember> recipes) {
        this.recipes = recipes;
    }


    public HashMap<String, Object> toHashMap() {
        HashMap<String, Object> map = new HashMap<>();
        map.put("id", id);
        map.put("title", title);
        map.put("numOfServings", numberOfServings);
        map.put("date", date.toEpochMilli());

        List<HashMap<String, Object>> ingredientList = new ArrayList<>();
        ingredients.forEach(member -> ingredientList.add(member.toHashMap()));
        map.put("ingredients", ingredientList);

        List<HashMap<String, Object>> recipeList = new ArrayList<>();
        recipes.forEach(member -> recipeList.add(member.toHashMap()));
        map.put("recipes", recipeList);
        return map;
    }

    static MealPlan fromHashMap(HashMap<String, Object> map) {
        List<RecipeIngredientMember> ingredientMembers = new ArrayList<>();
        List<HashMap<String, Object>> ingredients =
                (List<HashMap<String, Object>>) map.get("ingredients");

        assert ingredients != null;
        ingredients.forEach(
                ingredientMap -> ingredientMembers.add(
                        RecipeIngredientMember.fromHashMap(ingredientMap)));


        List<MealPlanRecipeMember> recipeMembers = new ArrayList<>();
        List<HashMap<String, Object>> recipes =
                (List<HashMap<String, Object>>) map.get("recipes");

        assert recipes != null;
        recipes.forEach(
                recipeMap -> recipeMembers.add(
                        MealPlanRecipeMember.fromHashMap(recipeMap)));


        return new MealPlan(
                (String) map.get("id"),
                (String) map.get("title"),
                (long) map.get("numOfServings"),
                Instant.ofEpochMilli( (long) map.get("date")),
                ingredientMembers,
                recipeMembers
        );
    }
}
