package com.CMPUT301F22T25.malwarepolymorphism;

import android.app.Activity;

import androidx.test.platform.app.InstrumentationRegistry;
import androidx.test.rule.ActivityTestRule;

import com.CMPUT301F22T25.malwarepolymorphism.features.ingredients.UI.IngredientDetailsActivity;
import com.google.android.material.textfield.TextInputEditText;
import com.robotium.solo.Solo;

import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;

public class MainActivityTest {
    private Solo solo;

    /**
     * Runs before all tests and creates solo instance.
     */
    @Rule
    public ActivityTestRule<MainActivity> rule =
            new ActivityTestRule<>(MainActivity.class, true, true);

    /**
     * Gets the activity
     * @throws Exception
     */
    @Before
    public void setUp() throws Exception {
        solo = new Solo(InstrumentationRegistry.getInstrumentation(), rule.getActivity());
    }

    /**
     * gets the activity and proceed with the tests
     * @throws Exception if the activity is not found
     */
    @Test
    public void start() throws Exception {
        Activity activity = rule.getActivity();
    }

    /**
     * Checks whether the nav bar is working correctly
     * @throws Exception if in the wrong activity
     */
    @Test
    public void checkList() {
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.clickOnView(solo.getView(R.id.recipe_list_page));
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.sleep(2000);
    }

    /**
     * checks if the ingredient is added in the ingredient list
     */
    @Test
    public void checkIngredientAdd(){
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.clickOnView(solo.getView(R.id.add_ingredient_fab));
        solo.assertCurrentActivity("Correct Activity", IngredientDetailsActivity.class);
        solo.enterText((TextInputEditText) solo.getView(R.id.description_text_field_input), "Test");
        solo.enterText((TextInputEditText) solo.getView(R.id.location_set_text_field_input), "Pantry");
        solo.enterText((TextInputEditText) solo.getView(R.id.amount_text_field_input), "1");
        solo.enterText((TextInputEditText) solo.getView(R.id.unit_text_field_input), "Test");
        solo.enterText((TextInputEditText) solo.getView(R.id.category_text_field_input), "Test");
        solo.sleep(2000);
        solo.clickOnView(solo.getView(R.id.save_button));
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        Assert.assertTrue(solo.searchText("Test"));
        solo.sleep(2000);
    }


    @Test
    public void checkIngredientDelete(){
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.clickOnView(solo.getView(R.id.add_ingredient_fab));
        solo.assertCurrentActivity("Correct Activity", IngredientDetailsActivity.class);
        solo.enterText((TextInputEditText) solo.getView(R.id.description_text_field_input), "A");
        solo.enterText((TextInputEditText) solo.getView(R.id.location_set_text_field_input), "A");
        solo.enterText((TextInputEditText) solo.getView(R.id.amount_text_field_input), "1");
        solo.enterText((TextInputEditText) solo.getView(R.id.unit_text_field_input), "A");
        solo.enterText((TextInputEditText) solo.getView(R.id.category_text_field_input), "A");
        solo.sleep(2000);
        solo.clickOnView(solo.getView(R.id.save_button));
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.sleep(2000);
//        get item on position 0 in recycler view
        solo.clickInRecyclerView(0);
        solo.assertCurrentActivity("Correct Activity", IngredientDetailsActivity.class);
        solo.sleep(2000);
        solo.clickOnView(solo.getView(R.id.delete_icon_button));
        solo.assertCurrentActivity("Correct Activity", MainActivity.class);
        solo.sleep(2000);
    }

    @After
    public void tearDown() throws Exception {
        solo.finishOpenedActivities();
    }

}
